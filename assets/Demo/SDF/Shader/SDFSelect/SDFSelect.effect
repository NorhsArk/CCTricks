
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
}%

CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;
  
  void main() {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;

    v_color = a_color;
    gl_Position = pos;
  }
}%

CCProgram fs %{
  #extension GL_OES_standard_derivatives: enable
  precision highp float;

  #include <cc-global>
  #include <cc-local>
  #include <sdf>

  #define PI 3.141592653589793
  
  in vec4 v_color;
  in vec2 v_uv0;
  in vec2 v_uv1;

  uniform sampler2D texture;

  
  float Remap01(float a, float b, float t) {
    return (t-a) / (b-a);
  }

  float Remap(float a, float b, float c, float d, float t) {
    return Remap01(a, b, t) * (d-c) + c;
  }

  void main()
  {
    vec2 uv = v_uv0.xy;

    float w = 2.;
    float offset = Remap(0., 1.0, w, w+6., abs(sin(cc_time.x * 4.0)));

    float D = GetD(texture, uv) + offset;
    float aastep = max(fwidth(D), 1e-8);

    // 取轮廓线遮罩
    float mask = smoothstep(aastep, -aastep, abs(D)-w);
    // float mask = smoothstep(outlineWidth, outlineWidth - 0.05, abs(alpha - centerAlpha));

    gl_FragColor = vec4(0., 1., 0., mask);
  }
}%

// Copyright 2021 Cao Gaoting<caogtaa@gmail.com>
// https://caogtaa.github.io
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT

/*
 * Date: 2021-08-04 10:24:59
 * LastEditors: GT<caogtaa@gmail.com>
 * LastEditTime: 2021-08-09 23:41:45
*/ 


CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        texSize: { value: [128., 128.] }
        texStep: { value: [0.01, 0.01] }
        maxDist: { value: 8. }
}%

CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;
  
  void main() {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;

    v_color = a_color;
    gl_Position = pos;
  }
}%

CCProgram fs %{
  #extension GL_OES_standard_derivatives: enable
  precision highp float;

  #include <cc-global>
  #include <cc-local>
  #include <sdf>

  in vec4 v_color;
  in vec2 v_uv0;

  uniform sampler2D texture;

  void main()
  {
    vec2 uv = v_uv0.xy;

    float D = GetD(texture, uv);
    float w = mod(floor(cc_time.x), 8.) + 0.5;     // 边线粗度(单边)
    float aastep = fwidth(D);

    // float aastep = 0.7 * length(vec2(dFdx(D), dFdy(D)));   // 更加精确的AA，但是肉眼上和fwidth(D)已经很难区分出来
    aastep = max(aastep, 1e-8);   // never be 0, otherwise smoothstep result unexpectly

    float mask = smoothstep(aastep, -aastep, abs(D)-w);
    gl_FragColor = vec4(1., 1., 1., mask);
  }
}%
